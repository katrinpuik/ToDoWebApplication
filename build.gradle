buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'war'
    id 'org.akhikhl.gretty' version '1.4.2'
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
}

dependencies {
    compile 'mysql:mysql-connector-java:5.1.45'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.1.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"

  //  repositories { jcenter() }
    dependencies { testCompile 'org.mockito:mockito-core:2.7.22' }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}

def debugArgs = []
if (gradle.startParameter.initScripts) {
    def line = file(gradle.startParameter.initScripts[0]).readLines().findAll({x -> x ==~ /.*-agentlib:jdwp=.*/ })[0]
    if (line) {
        debugArgs = ((line =~ /.*'(.*)'.*/)[0][1] as String).split(' ')
    }
}

gretty {
    jvmArgs = [*debugArgs]
    contextPath = '/'
    managedClassReload = true
}